name: "Build and test"
'on':
  pull_request:
  push:
    branches:
    - main
    - ci-test
jobs:
  test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-22.05

    - uses: cachix/cachix-action@v10
      with:
        name: runix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: "Run tests"
      run: |
        nix-shell --attr ci nix/shell.nix --run './test.sh'

  integration:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-22.05
        extra_nix_config: |
          max-jobs = 6

    - uses: cachix/cachix-action@v10
      with:
        name: runix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: "Build all platforms"
      run: nix-build --no-out-link nix/all-platforms.nix

    - name: "Run integration tests"
      env:
        TEST_FLAGS: "--ignored"
      run: |
        nix-shell --attr ci nix/shell.nix --run './test.sh --ignored'

    - name: "Create bootstrap artifacts"
      run: |
        nix-shell --attr ci nix/shell.nix --run '
          set -eux
          gup -j6 -u build/platforms/all/bootstrap.dir
          set +x
        '
    - name: "Log platform sizes"
      run: |
        du -hs build/platforms/*/bootstrap.dir/store | while read line; do
          echo "::notice::$line"
        done
